user nginx;
worker_processes 1;
pid /var/run/nginx.pid;

events {
  worker_connections 1024;
}

http {
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  server_tokens off;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  gzip on;
  gzip_disable "msie6";

  # Unless these are set explicitly, the types_hash_bucket_size is set at
  # runtime depending on the processor's cache line size, which can (and does)
  # cause inconsistent behaviour on different hardware. Our
  # /etc/nginx/mime.types requires at least a 32 bit bucket, but we set these to
  # the latest nginx default values to be on the safe size.
  types_hash_bucket_size 64;
  types_hash_max_size 1024;

  proxy_cache_path /var/cache/nginx/proxycache levels=1:2 keys_zone=cache:30m max_size=250m;
  proxy_temp_path /var/cache/nginx/proxytemp 1 2;

  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name {{ ilab_catalog_fqdn }};

    location / {
        return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name {{ ilab_catalog_fqdn }};

    # Using the Nginx intermediate TLS configuration from ssl-config.mozilla.org

    ssl_certificate {{ openssl_certs_dir }}/{{ openssl_crt_signed }};
    ssl_certificate_key {{ openssl_private_dir }}/{{ openssl_key_signed }};
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /path/to/dhparam
    ssl_dhparam  {{ openssl_private_dir }}/{{ openssl_dhparams }};

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/pki/tls/certs/ca-bundle.trust.crt;

    client_max_body_size 100M;

    location / {
      proxy_pass http://127.0.0.1:8080/;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-Host $host;
      proxy_set_header Host $host;
      proxy_cache cache;
      proxy_cache_bypass $cookie_auth_tkt;
      proxy_no_cache $cookie_auth_tkt;
      proxy_cache_valid 30m;
      proxy_cache_key $host$scheme$proxy_host$request_uri;
    }
  }
}
